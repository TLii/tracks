name: Pipeline action

on:
  push:
    branches:
    - master
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      
    - name: Set branch env
      run: |
        echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
        
    - name: Set build version
      run: |
        BUILD=$GITHUB_RUN_NUMBER
        echo "BUILD_VERSION=$BRANCH-$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
        echo $BUILD_VERSION > ./BUILD_VERSION
      
    - name: Docker Build & Push Action
      # You may pin to the exact commit or the version.
      # uses: mr-smithers-excellent/docker-build-push@a7fe6652db5c7274374844e81692992f5a2befb9
      uses: mr-smithers-excellent/docker-build-push@v5.6
      with:
        # Name of the Docker image
        image: tracks/${{ env.BRANCH }}
        # Tags override for Docker image
        tags: latest, ${{ env.BRANCH }}, ${{ env.BUILD_VERSION }} # optional
        # Target Docker registry
        registry: ${{ secrets.REGISTRY_ADDRESS }}
        # Location of Dockerfile, if not Dockerfile in root directory
        dockerfile: Dockerfile # optional, default is Dockerfile
        # Docker build arguments passed via --build-arg
        #buildArgs: # optional
        # Docker build labels passed via --label
        #labels: # optional
        # Docker build target passed via --target
        #target: # optional
        # Docker registry username
        username: ${{ secrets.REGISTRY_USERNAME }}  # optional
        # Docker registry password
        password: ${{ secrets.REGISTRY_PASSWORD }} # optional
        # Adds latest tag to auto-generated GitOps tag
        addLatest: true # optional, default is false

    - name: Checkout Chart
      uses: actions/checkout@master
      if: github.ref == 'refs/heads/master'
      with: 
        repository: ${{ secrets.CHART_REPOSITORY }}
        token: ${{ secrets.TRACKS_PAT }}
        path: ./chart
        
    - name: Update Chart Versions
      if: github.ref == 'refs/heads/master'
      run: |
        CHARTVER=$(sed -n  '/^version:.*/p' ./chart/$BRANCH/Chart.yaml | awk -F. '/[0-9]+\./{$NF++;print}' OFS=.)
        sed -i "s/^version:.*/$CHARTVER/" ./chart/$BRANCH/Chart.yaml
        sed -i "s/^appVersion:.*/appVersion: $BUILD_VERSION/" ./chart/$BRANCH/Chart.yaml
        echo "Chart version: $CHARTVER\nApp Version: $BUILD_VERSION"
        
    - name: Push Chart
      if: github.ref == 'refs/heads/master'
      run: |
        cd ./chart
        git add .
        git config user.name github-actions
        git config user.email github-actions@github.com
        git commit -am "Pipeline/Updated Chart version and App version"
        git push
    

